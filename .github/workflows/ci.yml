name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend Tests & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci

    - name: Lint Backend Code
      run: |
        cd backend
        npm run lint

    - name: Build Backend
      run: |
        cd backend
        npm run build

    - name: Test Backend
      run: |
        cd backend
        npm test

    - name: Upload Backend Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-build-${{ matrix.node-version }}
        path: backend/dist/

  frontend-tests:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci

    - name: Lint Frontend Code
      run: |
        cd frontend
        npm run lint

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    - name: Test Frontend
      run: |
        cd frontend
        npm test

    - name: Upload Frontend Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/dist/

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install All Dependencies
      run: |
        npm install
        cd backend && npm ci
        cd ../frontend && npm ci

    - name: Build All Projects
      run: npm run build

    - name: Start Backend Server
      run: |
        cd backend
        npm start &
        sleep 10

    - name: Health Check Test
      run: |
        curl -f http://localhost:3001/health || exit 1
        curl -f http://localhost:3001/api/posts || exit 1

    - name: Security Audit
      run: |
        cd backend && npm audit --audit-level=high
        cd ../frontend && npm audit --audit-level=high

  deployment-ready:
    name: Deployment Check
    runs-on: ubuntu-latest
    needs: [integration-tests]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Backend Build
      uses: actions/download-artifact@v4
      with:
        name: backend-build-20.x
        path: backend/dist/

    - name: Download Frontend Build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build-20.x
        path: frontend/dist/

    - name: Validate Build Artifacts
      run: |
        ls -la backend/dist/
        ls -la frontend/dist/
        
        # Check if main files exist
        test -f backend/dist/index.js || exit 1
        test -f frontend/dist/index.html || exit 1

    - name: Create Deployment Summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo " Backend build successful" >> $GITHUB_STEP_SUMMARY

    - name: Deployment Ready Notification
      run: |
        echo "All checks passed! Project is ready for deployment."
        echo "Backend artifact: backend-build-20.x"
        echo "Frontend artifact: frontend-build-20.x"
